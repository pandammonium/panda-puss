@mixin metadata($metadata-type) {
  @if $metadata-type != 'comment' and $metadata-type != 'article' {
    @error "Unknown post metadata type";
  }
  & {
    // .pp-#{$metadata-type}-metadata,
    .pp-#{$metadata-type}-metadata {
      // @debug #{&};
      // background-color: cornflowerblue;
      // border: 1px solid cornflowerblue;
      // Grid item
      grid-area: metadata;
      // End of grid item
      // Flex container
      display: flex;
      flex-flow: row wrap;
      column-gap: calc(1 * var(--pp--space--hor));
      row-gap: calc(0 * var(--pp--space--ver));;
      // End of flex container

      $metadata-text: '.pp-#{$metadata-type}-author, .pp-#{$metadata-type}-date';
      @if ($metadata-type != 'comment') {
        $metadata-text: #{$metadata-text} + ', .pp-#{$metadata-type}-terms',
      }
      // @debug #{$metadata-text};
      #{$metadata-text} {
        // Flex item
        @supports not (flex-basis: fit-content) {
          flex: 0 1 auto;
        }
        @supports (flex-basis: fit-content) {
          flex: 0 1 fit-content;
        }
        // End of flex item
      }

      .pp-#{$metadata-type}-author {
        // background-color: darkkhaki;
        // border: 1px solid darkkhaki;
        // Grid container
        display: grid;
        column-gap: calc(1.5 * var(--pp--space--hor));
        row-gap: 0;
        $avatar-width: 0;
        @if $metadata-type == 'comment' {
          $avatar-width: 32px;
        } @else if $metadata-type == 'article' {
          $avatar-width: 48px;
        }
        grid-template-columns: $avatar-width minmax(5ch, 1fr);
        // @debug #{$avatar-width};
        grid-template-rows: min-content;
        // grid-template-rows: clamp(30px, $avatar-height, 60px);
        grid-template-areas:
          "author-avatar author-content"
          ;
        // End of grid container
        $avatar-class: "";
        @if $metadata-type == 'comment' {
          $avatar-class: "&-avatar";
        } @else if $metadata-type == 'article' {
        $avatar-class: ".wp-block-post-author__avatar";
        }
        #{$avatar-class} {
          // background-color: greenyellow;
          // border: 1px solid greenyellow;
          // outline: 1px solid greenyellow;
          // Need to override an 'inline' margin setting:
          margin: inherit;
          // Grid item
          grid-area: author-avatar;
          place-self: center end;
          // End of grid item
          .avatar {
            // border: 1px solid red;
            // vertical-align: bottom;
          }
        }
        $content-class: "";
        @if $metadata-type == 'comment' {
          $content-class: "&-content";
        } @else if $metadata-type == 'article' {
        $content-class: ".wp-block-post-author__content";
        }
        #{$content-class} {
          // background-color: yellowgreen;
          // border: 1px solid yellowgreen;
          // Grid item
          grid-area: author-content;
          align-self: center;
          // End of grid item
          $name-class: "";
          @if $metadata-type == 'comment' {
            $name-class: "&-name";
          } @else if $metadata-type == 'article' {
          $name-class: ".wp-block-post-author__name";
          }
          // #{$name-class} {
          //   // border: 1px solid blue;
          //   margin: 0;
          // }
        }
      }

      .pp-#{$metadata-type}-date {
        // background-color: mediumpurple;
        // border: 1px solid purple;
        // Flex item
        align-self: center;
        // End of flex item
      }

      @if ($metadata-type != 'comment') {
        .pp-#{$metadata-type}-terms {
          // background-color: palevioletred;
          // border: 1px solid palevioletred;
          // Flex item
          align-self: center;
          // End of flex item
          // Flex container
          column-gap: calc(1 * var(--pp--space--hor));
          row-gap: 0;
          display: flex;
          flex-flow: row wrap;
          // End of flex container
          &-category {
            // background-color: rosybrown;
            // border: 1px solid rosybrown;
            // Flex item
          @supports not (flex-basis: fit-content) {
            flex: 0 1 auto;
          }
          @supports (flex-basis: fit-content) {
            flex: 0 1 fit-content;
          }
            // End of flex item
          }
          &-post_tag {
            // background-color: mistyrose;
            // border: 1px solid mistyrose;
            // Flex item
          @supports not (flex-basis: fit-content) {
            flex: 0 1 auto;
          }
          @supports (flex-basis: fit-content) {
            flex: 0 1 fit-content;
          }
            // End of flex item
          }
        }
      }
    }
  }
}
