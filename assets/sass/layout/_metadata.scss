@mixin metadata($metadata-type, $is-front_end) {
  @if $metadata-type != 'comment' and $metadata-type != 'article' {
    @error "Unknown post metadata type";
  }
  @if $is-front_end != true and $is-front_end != false {
    @error "Can't tell if is front end or back end. Second argument should be boolean (true: front end; false: back end).";
  }
  // @debug 'metadata-type: ' + #{$metadata-type};
  // @debug 'class: ' + #{&};
  // @debug 'is-front_end: ' + #{$is-front_end};
  @if ($is-front_end == true) {
    $col-gap: calc(1 * var(--pp--space--hor));
    & {
      // .pp-#{$metadata-type}-metadata,
      .pp-#{$metadata-type}-metadata {
        // @debug #{&};
        // background-color: cornflowerblue;
        // border: 1px solid cornflowerblue;
        // Grid item
        grid-area: metadata;
        // End of grid item
        // Flex container
        display: flex;
        flex-flow: row wrap;
        column-gap: $col-gap;
        row-gap: 0;//calc(0 * var(--pp--space--ver));
        place-self: end start;
        // End of flex container

        $metadata-text: '.pp-#{$metadata-type}-author, .pp-#{$metadata-type}-date';
        @if ($metadata-type != 'comment') {
          $metadata-text: #{$metadata-text} + ', .pp-#{$metadata-type}-terms',
        }
        // @debug #{$metadata-text};
        #{$metadata-text} {
          // Flex item
          @supports not (flex-basis: fit-content) {
            flex: 0 1 auto;
          }
          @supports (flex-basis: fit-content) {
            flex: 0 1 fit-content;
          }
          // End of flex item
        }

        .pp-#{$metadata-type}-author {
          // background-color: darkkhaki;
          // border: 1px solid darkkhaki;
          // Grid container
          display: grid;
          column-gap: $col-gap;
          row-gap: 0;
          $avatar-height: 0;
          $avatar-width: 0;
          @if $metadata-type == 'comment' {
            $avatar-height: 32px;
            $avatar-width: 32px;
          } @else if $metadata-type == 'article' {
            $avatar-height: 48px;
            $avatar-width: 48px;
          }
          grid-template-columns: $avatar-width minmax(min-content, 1fr);
          // @debug #{$avatar-width};
          grid-template-rows: minmax($avatar-height, min-content);
          grid-template-areas:
            "author-avatar author-content"
            ;
          // End of grid container
          $avatar-class: "";
          @if $metadata-type == 'comment' {
            $avatar-class: "&-avatar";
          } @else if $metadata-type == 'article' {
            $avatar-class: ".wp-block-post-author__avatar";
          }
          #{$avatar-class} {
            // background-color: greenyellow;
            // border: 1px solid greenyellow;
            // outline: 1px solid greenyellow;
            height: $avatar-height;
            // Grid item
            grid-area: author-avatar;
            place-self: center end;
            // End of grid item
            // .avatar {
            //   // border: 1px solid red;
            // }
          }
          $content-class: "";
          @if $metadata-type == 'comment' {
            $content-class: "&-content";
            #{$content-class} {
              width: max-content;
            }
          } @else if $metadata-type == 'article' {
            $content-class: ".wp-block-post-author__content";
            #{$content-class} {
              display: flex;
              flex-flow: row wrap;
              column-gap: $col-gap;
              align-content: center;
              align-items: center;
              justify-content: flex-start;
              > .wp-block-post-author__byline {
                flex: 0 1 max-content;
              }
              > .wp-block-post-author__name {
                flex: 0 1 max-content;
              }
              > .wp-block-post-author__bio {
                flex: 0 1 max-content;
              }
            }
          }
          #{$content-class} {
            // background-color: yellowgreen;
            // border: 1px solid yellowgreen;
            // Grid item
            grid-area: author-content;
            align-self: center;
            // End of grid item
            $name-class: "";
            @if $metadata-type == 'comment' {
              $name-class: "&-name";
            } @else if $metadata-type == 'article' {
              $name-class: ".wp-block-post-author__name";
            }
            // #{$name-class} {
            //   // border: 1px solid blue;
            //   margin: 0;
            // }
          }
        }

        .pp-#{$metadata-type}-date {
          // background-color: mediumpurple;
          // border: 1px solid purple;
          // Flex item
          align-self: center;
          // End of flex item
        }

        @if ($metadata-type != 'comment') {
          .pp-#{$metadata-type}-terms {
            // background-color: palevioletred;
            // border: 1px solid palevioletred;
            // Flex item
            align-self: center;
            // End of flex item
            // Flex container
            column-gap: 0;//$col-gap;
            row-gap: 0;
            display: flex;
            flex-flow: row wrap;
            // End of flex container
            &-category {
              // background-color: rosybrown;
              // border: 1px solid rosybrown;
              // Flex item
            @supports not (flex-basis: fit-content) {
              flex: 0 1 auto;
            }
            @supports (flex-basis: fit-content) {
              flex: 0 1 fit-content;
            }
              // End of flex item
            }
            &-post_tag {
              // background-color: mistyrose;
              // border: 1px solid mistyrose;
              // Flex item
            @supports not (flex-basis: fit-content) {
              flex: 0 1 auto;
            }
            @supports (flex-basis: fit-content) {
              flex: 0 1 fit-content;
            }
              // End of flex item
            }
          }
        }
      }
    }
  }
}
