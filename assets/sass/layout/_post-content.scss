@use 'sass:string';
@use 'article';

@mixin post-content($content-type, $is-front_end) {

  // @debug "content type: #{$content-type}";

  $article: "\"article\"";
  $num-rows: 0;
  $grid-areas: #{$article};
  @if $content-type == "content" {
    $single-nav: "\"navigation\"";
    @if ($is-front_end == true) {
      $single-comments: "\"post-comments\"";
      $grid-areas: #{$grid-areas} + " "  + #{$single-nav} + " "  + #{$single-comments};
      $num-rows: 3;
    } @else {
      $grid-areas: #{$grid-areas} + " "  + #{$single-nav};
      $num-rows: 2;
    }
  } @else if $content-type == 'excerpt' {
    $num-rows: 1;
  } @else {
    @error "Unknown post content type";
  }
  @if ($num-rows == 0) {
    @error 'There should be more than #{$num-rows} rows for grid #{$grid-areas}';
  }

  // @debug '#{&}';

  & {
    // @debug #{&};
    // background-color: red;
    // border: 1px solid red;
    // Grid container
    display: grid;
    grid-template-columns: 100%;
    grid-template-rows: repeat($num-rows, min-content);
    // @debug 'num rows: ' + $num-rows;
    grid-template-areas: #{$grid-areas};
    column-gap: calc(2 * var(--pp--space--hor));
    row-gap: calc(0.5 * var(--pp--space--ver));
    // End of grid container

    .pp-article {
      // background-color: palegoldenrod;
      // border: 1px solid palegoldenrod;
      // Grid item
      grid-area: article;
      // End of grid item
      @include article.article($content-type, $is-front_end);
    }

    @if ($is-front_end == true) {
      // Single post/page comments
      .pp-comments {
        // background-color: darkmagenta;
        // border: 1px solid darkmagenta;
        // Grid item
        grid-area: post-comments;
        // End of grid item
      }
    }
    // End of single post/page comments

    // Single post/page navigation
    $nav-classes: '.pp-navigation_single.wp-block-template-part';
    @if ($is-front_end == true) {
      $nav-classes: #{$nav-classes} + ', .pp-comments-pagination';
    }
    #{$nav-classes} {
      // background-color: deeppink;
      // border: 1px solid deeppink;
      // Grid item
      grid-area: navigation;
      // End of grid item
      // Grid container
      display: grid;
      gap: 0 0;
      grid-template-columns: 50% 50%;
      grid-template-rows: min-content;;
      grid-template-areas:
        "navigation-link-previous navigation-link-next";
      // End of grid container
      $previous: '.pp-navigation-previous';
      @if ($is-front_end == true) {
        $previous: #{$previous} + ', .pp-comments-pagination-previous';
      }
      #{$previous} {
        // background-color: lightblue;
        // Grid item
        grid-area: navigation-link-previous;
        place-self: center start;
        // End of grid item
      }

      $next: '.pp-navigation-next';
      @if ($is-front_end == true) {
        $next: #{$next} + ', .pp-comments-pagination-next';
      }
      #{$next} {
        // background-color: lightgreen;
        // Grid item
        grid-area: navigation-link-next;
        place-self: center end;
        // End of grid item
      }
    }
    // End of single post/page navigation
  }
} // End of @mixin post-content
