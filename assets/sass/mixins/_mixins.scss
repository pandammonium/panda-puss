@use '../initialise/colours';
@use 'sass:color';

@mixin ui-element {
  border-color: currentColor;
  // border-style: solid;
  border-width: 1px;
}
// // This palaver fakes inset and outset so it looks better in Firefox. However, the colour must be hard-coded: 'currentColor' can't be used because at preprocessing time (i.e. when Sass sees it), it hasn't been defined: it's only defined once the page is rendered.
// // @see https://stackoverflow.com/a/70990728
// // This will be a problem if a different colour is used.
// $current-colour: colours.$pp--colour--fg-primary;
// $change-by: 80%;
// $darker: color.scale($current-colour, $lightness: (-1 * $change-by));
// $lighter: color.scale($current-colour, $lightness: $change-by);
// // @debug $current-colour + ' Lx ' + (-1 * $change-by) + ' => ' + $darker;
// // @debug $current-colour + ' Lx  ' + $change-by + ' => ' + $lighter;
@mixin ui-field {
  // border-bottom-color: $lighter;
  // border-left-color: $darker;
  // border-right-color: $lighter;
  // border-top-color: $darker;
  border-style: inset;
}
@mixin ui-button {
  // border-bottom-color: $darker;
  // border-left-color: $lighter;
  // border-right-color: $darker;
  // border-top-color: $lighter;
  border-style: outset;
}
@mixin ui-element-border {
  textarea,
  input,
  button {
    @include ui-element;
  }
  input:not([type=submit]),
  textarea {
    @include ui-field;
  }
  input[type="submit"] {
    @include ui-button;
  }
}

@mixin code-lang {
  code {
    // List of programming languages:
    // https://en.wikipedia.org/wiki/List_of_programming_languages
    $code-hue: 0;
    $hue-increment: 7.5;
    color: hsla($code-hue, 50%, 50%, 100%);
    &.ada {
      $code-hue: $code-hue + $hue-increment;
      color: hsla($code-hue, 50%, 50%, 100%);
    }
    &.algol {
      $code-hue: $code-hue + $hue-increment;
      color: hsla($code-hue, 50%, 50%, 100%);
    }
    &.basic {
      $code-hue: $code-hue + $hue-increment;
      color: hsla($code-hue, 50%, 50%, 100%);
    }
    &.c {
      $code-hue: $code-hue + $hue-increment;
      color: hsla($code-hue, 50%, 50%, 100%);
    }
    &.c\+\+ {
      $code-hue: $code-hue + $hue-increment;
      color: hsla($code-hue, 50%, 50%, 100%);
    }
    &.c\-\- {
      $code-hue: $code-hue + $hue-increment;
      color: hsla($code-hue, 50%, 50%, 100%);
    }
    &.javascript,
    &.js {
      $code-hue: $code-hue + $hue-increment;
      color: hsla($code-hue, 50%, 50%, 100%);
    }
    &.latex {
      $code-hue: $code-hue + $hue-increment;
      color: hsla($code-hue, 50%, 50%, 100%);
    }
    &.php {
      $code-hue: $code-hue + $hue-increment;
      color: hsla($code-hue, 50%, 50%, 100%);
    }
    // @debug $code-hue;
  }
}

@mixin initialise-spacing($is-front_end) {
  $reset-margin: ':root, body,\
  header, footer, div,\
  ol, ul, menu, dir, p, dl, img, time,\
  multicol, blockquote, figure,\
  h1, h2, h3, h4, h5, h6,\
  :is(article, aside, nav, section) h1,\
  button, input, optgroup, select, textarea, legend, fieldset,\
  .wp-block, .wp-site-blocks, .wp-block-post-author__bio, .wp-block-post-template, .wp-block-search__button, .wp-block-search__input,\
  .pp-template .wp-block-post .pp-article, .single .pp-main:not(.pp-front-page) .pp-article, .page .pp-main:not(.pp-front-page) .pp-article,\
  .block-editor-block-list__layout .pp-main:not(.pp-front-page) .pp-article,\
  .single .pp-main.pp-front-page .pp-article, .page .pp-main.pp-front-page .pp-article, .block-editor-block-list__layout .pp-main.pp-front-page .pp-article, .pp-template .wp-block-post .pp-article,\
  .wp-block-query-pagination > .wp-block-query-pagination-next, .wp-block-query-pagination > .wp-block-query-pagination-numbers, .wp-block-query-pagination > .wp-block-query-pagination-previous';

  @if ($is-front_end == true) {
    $reset-margin: #{$reset-margin} + ', .wp-block-post-comments .comment-form-cookies-consent #wp-comment-cookies-consent, button, ::file-selector-button, input:is([type="reset"], [type="button"], [type="submit"]), .wp-block-post-comments input:not([type="submit"]):not([type="checkbox"]), .wp-block-post-comments textarea, .wp-block-post-author__avatar, .wp-block-post-author__content, .wp-block-post-author__byline, .wp-block-post-author__name, .wp-block-post-author__bio';
  }

  #{$reset-margin} {
    // @debug #{$is-front_end} â€“ #{&};
    margin: 0 {
      block: 0;
      inline: 0;
    };
    padding: 0 {
      block: 0;
      inline: 0;
    };
    // outline: 1px dotted hotpink;
  }
  ol,ul,dl {
    padding-inline-start: 1.5ch;
  }
}
