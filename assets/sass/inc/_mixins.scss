@use 'sass:color';
@use 'sass:map';
@use 'sass:math';
@use 'functions';
@use '../settings/colours';
@use '../settings/fonts';
@use '../settings/spacing';

@mixin title-font-size($narrow-font-size, $medium-font-size) {
  // Only the narrow screen and medium screen font sizes need to be specified here: the widest screen font size is given by the default size.
  // @debug 'Narrow screen font size: ' + $narrow-font-size;
  // @debug 'Medium screen font size: ' + $medium-font-size;
  $nar-title-size: map.get(fonts.$pp--fonts, "sizes", "#{$narrow-font-size}");
  // @debug 'Narrow screen title size #{$nar-title-size} is a #{type-of($nar-title-size)}';
  $med-title-size: map.get(fonts.$pp--fonts, "sizes", "#{$medium-font-size}");
  // @debug 'Medium screen title size #{$med-title-size} is a #{type-of($med-title-size)}';
  @media screen and (min-width: 600px) and (max-width: 782px) {
    font-size: $med-title-size;
  }
  @media screen and (max-width: 599px) {
    font-size: $nar-title-size;
  }
}

@mixin footer($parent-class, $footer-class) {
  @error 'Invoked mixins.footer(#{$parent-class}, #{$footer-class})';
}

@mixin lay_out-footer-blocks($flexInc, $flexDec, $minItems, $maxItems) {
  // @debug 'Invoked mixins.lay_out-footer-blocks(#{$flexInc}, #{$flexDec}, #{$minItems}, #{$maxItems})';
  @for $i from $minItems through $maxItems {
    &:first-child:nth-last-child(#{$i}),
    &:first-child:nth-last-child(#{$i}) ~ & {
      /* #{$i} footer block(s) */
      flex: $flexInc $flexDec calc(100% / $i);
      // @debug $i footer block(s) → flex $flexInc $flexDec calc(100% / $i);
    }
  }
}

@mixin header($parent-class, $header-class) {
  @warn 'Invoked mixins.header(#{$parent-class}, #{$header-class})';
  $header-superclass: '';
  $grid-container-class: $header-class;
  $grid-item-extendable-class: '.pp-header';
  @if $header-class == '.pp-header' {
    $grid-container-class: '';
  } @else {
    @error Unexpected header class #{$header-class};
  }
  // @debug 'Header parent: ' + $parent-class;
  // @debug 'Header class: ' + $header-class;
  // @debug 'Header superclass: ' + $header-superclass;
  // @debug 'Header grid container class: ' + $grid-container-class;
  // @debug 'Header grid item (extendable) class: ' + $grid-item-extendable-class;

  @at-root #{$parent-class}#{$grid-container-class}#{$header-class} {
    // @debug 'Header grid container class (actual): #{&}';
    // Grid container
  }
}

@mixin background-shadow($colour) {
  // @debug 'Invoked mixins.background-shadow(#{$colour})';
  // border: 1px solid colours.$pp--colour--bg-primary;
  // box-shadow: 0 0 30px colours.$pp--colour--hl-primary;
  // box-shadow: 0 0 10px $colour;
  $main-len: 5px;
  $long-len: 0.5 * $main-len;
  box-shadow:
    0 0 1px 1px colours.$pp--colour--ll-primary,
    0 0 $main-len ($main-len + 1) colours.$pp--colour--fg-primary,
    0 0 $long-len ($long-len + 1) colours.$pp--colour--ll-primary,
  ;
  margin: {
    top: $main-len;
    bottom: $main-len;
  };
}
@mixin text-shadow($colour) {
  // border: 1px solid colours.$pp--colour--bg-primary;
  // box-shadow: 0 0 30px colours.$pp--colour--hl-primary;
  // box-shadow: 0 0 10px $colour;
  // First box-shadow is on the top; last box-shadow is on the bottom:
  $main-len: 5px;
  $long-len: 2 * $main-len;
  $lightness-factor: 50%;
  text-shadow:
    0 0 1px color.adjust($colour, $lightness: -$lightness-factor + 10),
    0 0 $main-len color.adjust($colour, $lightness: (0 * $lightness-factor)),
    0 0 (2 * $main-len) color.adjust($colour, $lightness: $lightness-factor),
  ;
}

@mixin ui-element {
  background-color: inherit;
  border-color: colours.$pp--colour--ll-primary;
  border-radius: inherit;
  border-style: solid;
  border-width: 2px;
  color: colours.$pp--colour--fg-primary;
}

@mixin ui-field {
  @include ui-element;
  border-style: inset;
}

@mixin ui-button {
  @include ui-element;
  border-style: outset;
  padding: 0 clamp(1ch, calc(10 * #{map.get(spacing.$pp--spacing, "vertical")}), 3%);
  width: fit-content;
}
@mixin ui-button-active {
  @include ui-button;
  // background-color: colours.$pp--colour--fg-primary;
  // border-color: colours.$pp--colour--bg-primary;
  border-style: inset;
  // color: colours.$pp--colour--bg-primary;
}

@mixin code-lang {
  // List of programming languages:
  // @see https://en.wikipedia.org/wiki/List_of_programming_languages
  // Plus BibTeX, LaTeX
  $langs: 'ada', 'algol', 'basic', 'bibtex', 'c', 'c-minus-minus', 'c-plus-plus', 'c-sharp', 'caml', 'css', 'curl', 'delphi', 'fortan', 'go', 'haskell', 'html', 'javascript', 'js', 'latex', 'matlab', 'modula', 'objective-c', 'occam', 'perl', 'php';

  $code-hue-initial: 0;
  $code-hue: $code-hue-initial;
  $hue-increment: 7.5;
  @each $lang in $langs {
    // @debug '$lang: ' + #{$lang} + '; $code-hue: ' + #{$code-hue};
    &.#{$lang} {
      color: hsla($code-hue, 50%, 50%, 100%);
      $code-hue: $code-hue + $hue-increment;
      @if $code-hue > 360 - $hue-increment {
        $code-hue-initial: $code-hue-initial + 1;
        $code-hue: $code-hue-initial;
      }
    }
  }
}

@mixin list-spacing-left($is-front_end) {
  $list-types: ol, ul, dl;
  @each $list-type in $list-types {
    @if ($is-front_end == false) {
      #{$list-type} {
        padding: {
          // left: revert;
          inline-start: revert !important;
        }
      }
    } @else if ($is-front_end == true) {
      #{$list-type} {
        padding: {
          inline-start: revert;
        }
      }
      $list-type: '.pp-footer-blocks ' + $list-type;
      #{$list-type} {
        // Default value; works best in Chrome, whose specific test is unacceptable to SASS for v22–28:
        // outline: 5px solid black;
        padding-inline-start: 2.25ch;
        // Browser-specific settings taken from https://www.browserstack.com/guide/create-browser-specific-css; Opera 85.0, Chrome 100.0 and Safari15.4+ all seem to use the Safari 6.1–10.0 one: put it first so that the more specific ones match.
        // Don't bother with IE.
        @media screen and (min-color-index: 0) and(-webkit-min-device-pixel-ratio: 0) {
          // Safari 6.1-10.0, 15.4+
          // Opera 85.0
          // Chrome 100.0+
          // outline: 5px solid green;
          padding-inline-start: 2ch;
        }
        @supports (-ms-ime-align:auto) {
          // Edge
          // outline: 5px solid skyblue;
          padding-inline-start: 2.25ch;
        }
        @media screen and (-webkit-min-device-pixel-ratio:0) and (min-resolution:.001dpcm) {
          // Chrome 29+
          // Opera 85.0+
          // outline: 5px solid red;
          padding-inline-start: 2.25ch;
        }
        @media not all and (min-resolution: 0.001dpcm) {
          @supports (-webkit-appearance: none) and (not (stroke-color: transparent)) {
            // Safari 10.1
            // outline: 5px solid darkblue;
            padding-inline-start: 2ch;
          }
          @supports (-webkit-appearance: none) and (stroke-color: transparent) {
            // Safari 11+
            // outline: 5px solid lightblue;
            padding-inline-start: 2.125ch;
          }
        }
        @-moz-document url-prefix() {
          // Firefox
          // outline: 5px solid orange;
          padding-inline-start: 1.5ch;
        }
        @supports (-moz-appearance: none) {
          // Firefox (native OS styling)
          // outline: 5px solid darkorange;
          padding-inline-start: 1.5ch;
        }
      }
    }
  }
}

@mixin initialise-spacing($is-front_end) {
  $reset-margin: ':root, body,\
  header, footer, div,\
  ol, ul, menu, div, p, dl, img, time,\
  multicol, blockquote, figure,\
  h1, h2, h3, h4, h5, h6,\
  :is(article, aside, nav, section) h1,\
  button, input, optgroup, select, textarea, legend, fieldset,\
  .wp-block, .wp-site-blocks, .wp-block-post-author__bio, .wp-block-post-template, .wp-block-search__button, .wp-block-search__input,\
  .pp-template .wp-block-post .pp-article, .single .pp-main:not(.pp-front-page) .pp-article, .page .pp-main:not(.pp-front-page) .pp-article,\
  .block-editor-block-list__layout .pp-main:not(.pp-front-page) .pp-article,\
  .single .pp-main.pp-front-page .pp-article, .page .pp-main.pp-front-page .pp-article, .block-editor-block-list__layout .pp-main.pp-front-page .pp-article, .pp-template .wp-block-post .pp-article,\
  .pp-template .wp-block-post .pp-article, .single .pp-main:not(.pp-home-page) .pp-article, .page .pp-main:not(.pp-home-page) .pp-article,\
  .block-editor-block-list__layout .pp-main:not(.pp-home-page) .pp-article,\
  .single .pp-main.pp-home-page .pp-article, .page .pp-main.pp-home-page .pp-article, .block-editor-block-list__layout .pp-main.pp-home-page .pp-article, .pp-template .wp-block-post .pp-article,\
  .wp-block-query-pagination > .wp-block-query-pagination-next, .wp-block-query-pagination > .wp-block-query-pagination-numbers, .wp-block-query-pagination > .wp-block-query-pagination-previous,\
  .wp-block-code, wp-block-code > code, .wp-site-blocks .wp-block-code, .wp-site-blocks .wp-block-code code,\
  .block-editor-block-list__block wp-block .wp-block-code basic, pre code\
  fieldset';

  @if ($is-front_end == true) {
    $reset-margin: #{$reset-margin} + ', .wp-block-post-comments .comment-form-cookies-consent #wp-comment-cookies-consent, button, ::file-selector-button, input:is([type="reset"], [type="button"], [type="submit"]), .wp-block-post-comments input:not([type="submit"]):not([type="checkbox"]), .wp-block-post-comments textarea, .wp-block-post-author__avatar, .wp-block-post-author__content, .wp-block-post-author__byline, .wp-block-post-author__name, .wp-block-post-author__bio';
  }

  #{$reset-margin} {
    margin: 0 {
      block: 0;
      inline: 0;
    };
    padding: 0 {
      block: 0;
      inline: 0;
    };
    // outline: 1px dotted hotpink;
  }
  @include list-spacing-left($is-front_end);
}
