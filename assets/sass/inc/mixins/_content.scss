@use 'sass:map';
@use '../../settings/spacing';

@mixin article($content-type, $is-front_end) {
  @if $content-type != "content" and $content-type != 'excerpt' {
    @error "Unknown post content type";
  // } @else {
  //   @debug $content-type;
  }
  $grid-areas: "";
  $col-gap: 0;

  // @debug "content type: #{$content-type}";

  & {
    // @debug #{&};
    // background-color: yellow;
    // border: 1px solid yellow;
    // Grid container
    display: grid;
    grid-template-columns: clamp(10vw, 200px, 20vw) minmax(10px, 1fr);
    grid-template-rows: repeat(3, min-content);
    column-gap: $col-gap;
    row-gap: 0;
    // End of grid container
    // @debug "#{&}";
    &-header {
    // @debug #{&};
      // Grid item
      grid-area: article-header;
      // End of grid item
      // Grid container
      display: grid;
      grid-template-columns: 100%;
      grid-template-rows: min-content;
      grid-template-areas:
        "post-title"
      ;
      place-self: start stretch;
      // End of grid container
    }
    &-body {
      // @debug #{&};
      // background-color: cornsilk;
      // Grid item
      grid-area: article-body;
      // End of grid item
      // Grid container
      display: grid;
      grid-template-columns: 100%;
      grid-template-rows: min-content;
      grid-template-areas:
        "post-#{$content-type}"
      ;
      place-self: center stretch;
      // End of grid container
    }
    &-footer {
      // Grid item
      grid-area: article-footer;
      // End of grid item
      // Grid container
      display: grid;
      grid-template-columns: 100%;
      grid-template-rows: min-content;
      grid-template-areas:
        "metadata"
      ;
      place-self: end stretch;
      // End of grid container
      @include metadata('article', $is-front_end);
    }
    &-featured_image {
      // background-color: gold;
      // border: 1px solid gold;
      margin: 0 {
        left: auto;
        right: auto;
      };
      // Grid item
      grid-area: article-featured_image;
      place-self: start center;
      // End of grid item
    }
    &-title {
      // background-color: green;
      // border: 1px solid green;
      // Grid item
      grid-area: post-title;
      // End of grid item
    }

    &-body {
      // background-color: darkcyan;
      // border: 1px solid darkcyan;
      &_excerpt {
        // background-color: lightcyan;
        // border: 1px solid lightcyan;
        // Grid item
        grid-area: post-excerpt;
        // End of grid item
      }
      &_full {
        // background-color: cyan;
        // border: 1px solid cyan;
        // Grid item
        grid-area: post-content;
        // End of grid item
      }
      img {
        // Make sure images don't stick off the edge of the page:
        height: auto;
        max-width: 100%;
      }
    }
  }

  @if ($content-type == "content") {
    &.pp-alt {
      // @debug "#{$content-type}: #{&}";
      $header: "\"article-header\"";
      $image: "\"article-featured_image\"";
      $footer: "\"article-footer\"";
      $body: "\"article-body\"";
      $grid-areas: #{$header} + " " + #{$image} + " " + #{$body} + " "  + #{$footer};
      // @debug "grid (focus): #{$grid-areas}";
      // background-color: maroon;
      // border: 1px solid maroon;
      // Grid container
      grid-template-columns: 100%;
      grid-template-rows: repeat(4, min-content);
      grid-template-areas:
        #{$grid-areas}
      ;
      column-gap: $col-gap;
      row-gap: 0;
      // End of grid container
    }
    &.pp-focus {
      // @debug "#{$content-type}: #{&}";
      .pp-article-header {
        // Display title on overlaid on featured image:
        position: relative;
        text-align: center;
        // Only overlay the title over the featured image if there is an adjacent featured image:
        .pp-article-featured_image + .pp-article-title {
          left: 50%;
          position: absolute;
          top: 50%;
          transform: translate(-50%, -50%);
          width: 100%;
        }
        display: flex;
        flex-flow: column nowrap;
        align-items: stretch;
        align-content: center;
        justify-content: center;
      }
      $header: "\"article-header\"";
      $footer: "\"article-footer\"";
      $body: "\"article-body\"";
      $grid-areas: #{$header} + " " + #{$body} + " "  + #{$footer};
      // @debug "grid (focus): #{$grid-areas}";
      // background-color: maroon;
      // border: 1px solid maroon;
      // Grid container
      grid-template-columns: 100%;
      grid-template-rows: repeat(3, min-content);
      grid-template-areas:
        #{$grid-areas}
      ;
      column-gap: $col-gap;
      row-gap: 0;
      // End of grid container
    }
  } @else if ($content-type == "excerpt") {
    &.pp-front_page {
      // background-color: darkorchid;
      // border: 1px solid darkorchid;
      // @debug "#{$content-type}: #{&}";
      grid-template-columns: 100%;
      $image: "\"article-featured_image\"";
      $header: "\"article-header\"";
      $body: "\"article-body\"";
      $footer: "\"article-footer\"";
      $grid-areas: #{$header} + " " + #{$image} + " " + #{$body} + " "  + #{$footer};
      // @debug "grid (front page): #{$grid-areas}";

      // @debug "grid (focus): #{$grid-areas}";
      // background-color: maroon;
      // border: 1px solid maroon;
      // Grid container
      // grid-template-columns: 100%;
      grid-template-areas:
        #{$grid-areas}
      ;
      column-gap: $col-gap;
      row-gap: calc(0.5 * #{map.get(spacing.$pp--spacing, "vertical")});
      // End of grid container
    }
  }
  &.pp-no-featured_image {
    // @debug "#{$content-type}: #{&}";
    grid-template-columns: 100%;
    $header: "\"article-header\"";
    $footer: "\"article-footer\"";
    $body: "\"article-body\"";
    $grid-areas: #{$header} + " " + #{$body} + " "  + #{$footer};
    // @debug "grid (no feat. img.): #{$grid-areas}";
    // background-color: mediumaquamarine;
    // border: 1px solid mediumaquamarine;
    // Grid container
    grid-template-areas:
      #{$grid-areas}
    ;
    // End of grid container
    .pp-article-featured_image {
      display: none;
    }
  }
  @media (min-width: 601px) {
    & {
      // @debug "larger screen";
      // @debug "#{&}";
      $header: "\"article-featured_image article-header\"";
      $body: "\"article-featured_image article-body\"";
      $footer: "\"article-featured_image article-footer\"";
      $grid-areas: #{$header} + " " + #{$body} + " "  + #{$footer};
      // @debug "grid (larger-screen): #{$grid-areas}";
      grid-template-areas:
        #{$grid-areas}
      ;
    }
  }
  @media (max-width: 600px) {
    & {
      // @debug "smaller screen";
      // @debug "#{&}";
      grid-template-columns: auto;
      grid-template-rows: min-content;
      $image: "\"article-featured_image\"";
      $header: "\"article-header\"";
      $footer: "\"article-footer\"";
      $body: "\"article-body\"";
      $grid-areas: #{$image} + " " + #{$header} + " " + #{$body} + " "  + #{$footer};
      ;
      grid-template-areas:
        #{$grid-areas}
      ;
    }
  }
} // End of @mixin article

@mixin metadata($metadata-type, $is-front_end) {
  @if $metadata-type != 'comment' and $metadata-type != 'article' {
    @error "Unknown post metadata type";
  // } @else {
  //   @debug 'Metadata type: #{$metadata-type}';
  }
  @if $is-front_end != true and $is-front_end != false {
    @error "Can't tell if is front end or back end. Second argument should be boolean (true: front end; false: back end).";
  // } @else {
  //   @debug 'Is front end: #{$is-front-end}';
  }
  // @debug 'class: ' + #{&};
  @if ($is-front_end == true or $metadata-type == 'article') {
    $col-gap: calc(1 * #{map.get(spacing.$pp--spacing, "horizontal")});
    & {
      // .pp-#{$metadata-type}-metadata,
      .pp-#{$metadata-type}-metadata {
        // @debug #{&};
        // background-color: cornflowerblue;
        // border: 1px solid cornflowerblue;
        // Grid item
        grid-area: metadata;
        // End of grid item
        // Flex container
        display: flex;
        flex-flow: row wrap;
        column-gap: $col-gap;;
        row-gap: 0;
        place-self: end start;
        // End of flex container

        $metadata-text: '.pp-#{$metadata-type}-author, .pp-#{$metadata-type}-date';
        @if ($metadata-type != 'comment') {
          $metadata-text: #{$metadata-text} + ', .pp-#{$metadata-type}-terms',
        }
        // @debug #{$metadata-text};
        #{$metadata-text} {
          // Flex item
          @supports not (flex-basis: fit-content) {
            flex: 0 1 auto;
          }
          @supports (flex-basis: fit-content) {
            flex: 0 1 fit-content;
          }
          // End of flex item
        }

        .pp-#{$metadata-type}-author {
          // background-color: darkkhaki;
          // border: 1px solid darkkhaki;
          // Grid container
          display: grid;
          column-gap: $col-gap;
          row-gap: 0;
          $avatar-height: 0;
          $avatar-width: 0;
          @if $metadata-type == 'comment' {
            $avatar-height: 32px;
            $avatar-width: 32px;
          } @else if $metadata-type == 'article' {
            $avatar-height: 48px;
            $avatar-width: 48px;
          }
          grid-template-columns: $avatar-width minmax(min-content, 1fr);
          // @debug #{$avatar-width};
          grid-template-rows: minmax($avatar-height, min-content);
          grid-template-areas:
            "author-avatar author-content"
            ;
          // End of grid container
          $avatar-class: "";
          @if $metadata-type == 'comment' {
            $avatar-class: "&-avatar";
          } @else if $metadata-type == 'article' {
            $avatar-class: ".wp-block-post-author__avatar";
          }
          #{$avatar-class} {
            // background-color: greenyellow;
            // border: 1px solid greenyellow;
            // outline: 1px solid greenyellow;
            height: $avatar-height;
            // Grid item
            grid-area: author-avatar;
            place-self: center end;
            // End of grid item
            // .avatar {
            //   // border: 1px solid red;
            // }
          }
          $content-class: "";
          @if $metadata-type == 'comment' {
            $content-class: "&-content";
            #{$content-class} {
              width: max-content;
            }
          } @else if $metadata-type == 'article' {
            $content-class: ".wp-block-post-author__content";
            #{$content-class} {
              display: flex;
              flex-flow: row wrap;
              column-gap: $col-gap;
              align-content: center;
              align-items: center;
              justify-content: flex-start;
              > .wp-block-post-author__byline {
                flex: 0 1 max-content;
              }
              > .wp-block-post-author__name {
                flex: 0 1 max-content;
              }
              > .wp-block-post-author__bio {
                flex: 0 1 max-content;
              }
            }
          }
          #{$content-class} {
            // background-color: yellowgreen;
            // border: 1px solid yellowgreen;
            // Grid item
            grid-area: author-content;
            align-self: center;
            // End of grid item
            $name-class: "";
            @if $metadata-type == 'comment' {
              $name-class: "&-name";
            } @else if $metadata-type == 'article' {
              $name-class: ".wp-block-post-author__name";
            }
            // #{$name-class} {
            //   // border: 1px solid blue;
            //   margin: 0;
            // }
          }
        }

        .pp-#{$metadata-type}-date {
          // background-color: mediumpurple;
          // border: 1px solid purple;
          // Flex item
          align-self: center;
          // End of flex item
        }

        @if ($metadata-type != 'comment') {
          .pp-#{$metadata-type}-terms {
            // background-color: palevioletred;
            // border: 1px solid palevioletred;
            // Flex item
            align-self: center;
            // End of flex item
            // Flex container
            column-gap: $col-gap;
            row-gap: 0;
            display: flex;
            flex-flow: row wrap;
            // End of flex container
            &-category,
            &-post_tag {
              // background-color: rosybrown;
              // border: 1px solid rosybrown;
              // Flex container
              column-gap: 0;
              row-gap: 0;
              // End of flex container
              // Flex item
              @supports not (flex-basis: fit-content) {
                flex: 0 1 auto;
              }
              @supports (flex-basis: fit-content) {
                flex: 0 1 fit-content;
              }
              // End of flex item
            }
            // &-post_tag {
            //   // background-color: mistyrose;
            //   // border: 1px solid mistyrose;
            // }
          }
        }
      }
    }
  }
} // End of @mixin metadata

@mixin pagination {
  .pp-pagination {
    // @debug #{&};
    // background-color: burlywood;
    // border: 1px solid brown;
    // Grid container
    $col-width: calc(1/3 * 100) + '%';
    display: grid;
    column-gap: 0;
    row-gap: 0;
    grid-template-columns: repeat(3, #{$col-width});
    grid-template-rows: min-content;
    grid-template-areas:
      "query-pagination-next query-pagination-numbers query-pagination-previous"
    ;
    // End of grid container
    &-previous {
      // border: 1px solid orange;
      margin: 0;
      // Grid item
      grid-area: query-pagination-previous;
      align-self: stretch;
      justify-self: end;
      place-self: stretch end;
      // End of grid item
    }
    &-numbers {
      // background-color: purple;
      // border: 1px solid purple;
      direction: rtl;
      margin: 0;
      // Grid item
      grid-area: query-pagination-numbers;
      align-self: stretch;
      justify-self: center;
      place-self: stretch center;
      // End of grid item
    }
    &-next {
      // border: 1px solid green;
      margin: 0;
      // Grid item
      grid-area: query-pagination-next;
      align-self: stretch;
      justify-self: start;
      place-self: stretch start;
      // End of grid item
    }
  }
} // End of @mixin pagination

@mixin post-content($content-type, $is-front_end) {
  // @debug "content type: #{$content-type}";
  $article: "\"article\"";
  $num-rows: 0;
  $grid-areas: #{$article};
  @if $content-type == "content" {
    $single-nav: "\"navigation\"";
    @if ($is-front_end == true) {
      $single-comments: "\"post-comments\"";
      $grid-areas: #{$grid-areas} + " "  + #{$single-nav} + " "  + #{$single-comments};
      $num-rows: 3;
    } @else {
      $grid-areas: #{$grid-areas} + " "  + #{$single-nav};
      $num-rows: 2;
    }
  } @else if $content-type == 'excerpt' {
    $num-rows: 1;
  } @else {
    @error "Unknown post content type: #{$content-type}";
  }
  @if ($num-rows == 0) {
    @error 'There should be more than #{$num-rows} rows for grid #{$grid-areas}';
  }
  // @debug '#{&}';

  & {
    // @debug #{&};
    // background-color: red;
    // border: 1px solid red;
    .pp-article {
      @debug #{&};
      // Grid container
      display: grid;
      grid-template-columns: 100%;
      grid-template-rows: repeat($num-rows, min-content);
      // @debug 'num rows: ' + $num-rows;
      grid-template-areas: #{$grid-areas};
      column-gap: calc(2 * #{map.get(spacing.$pp--spacing, "horizontal")});
      row-gap: calc(0.5 * #{map.get(spacing.$pp--spacing, "vertical")});
      // End of grid container

      // background-color: palegoldenrod;
      // border: 1px solid palegoldenrod;
      // Grid item
      grid-area: article;
      // End of grid item
      @include article($content-type, $is-front_end);
    }

    @if ($is-front_end == true) {
      // Single post/page comments
      .pp-comments {
        // background-color: darkmagenta;
        // border: 1px solid darkmagenta;
        // Grid item
        grid-area: post-comments;
        // End of grid item
      }
    }
    // End of single post/page comments

    // Single post/page navigation
    $nav-classes: '.pp-navigation_single.wp-block-template-part';
    @if ($is-front_end == true) {
      $nav-classes: #{$nav-classes} + ', .pp-comments-pagination';
    }
    #{$nav-classes} {
      // background-color: deeppink;
      // border: 1px solid deeppink;
      // Grid item
      grid-area: navigation;
      // End of grid item
      // Grid container
      display: grid;
      gap: 0 0;
      grid-template-columns: 50% 50%;
      grid-template-rows: min-content;;
      grid-template-areas:
        "navigation-link-previous navigation-link-next";
      // End of grid container
      $previous: '.pp-navigation-previous';
      @if ($is-front_end == true) {
        $previous: #{$previous} + ', .pp-comments-pagination-previous';
      }
      #{$previous} {
        // background-color: lightblue;
        // Grid item
        grid-area: navigation-link-previous;
        place-self: center start;
        // End of grid item
      }

      $next: '.pp-navigation-next';
      @if ($is-front_end == true) {
        $next: #{$next} + ', .pp-comments-pagination-next';
      }
      #{$next} {
        // background-color: lightgreen;
        // Grid item
        grid-area: navigation-link-next;
        place-self: center end;
        // End of grid item
      }
    }
    // End of single post/page navigation
  }
} // End of @mixin post-content
